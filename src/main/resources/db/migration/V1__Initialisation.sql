CREATE TABLE compte_minima (id_cpt_min int(10) NOT NULL AUTO_INCREMENT comment 'identifiant du compte à minima', id_camp int(10) NOT NULL comment 'id de la campagne', mail_perso_cpt_min varchar(80) NOT NULL comment 'mail perso du compte à minima', nom_cpt_min varchar(255) NOT NULL comment 'nom du compte à minima', prenom_cpt_min varchar(255) NOT NULL comment 'prénom du compte à minima', num_dossier_opi_cpt_min varchar(8) NOT NULL UNIQUE comment 'identifiant du candidat : 6 caractères alphanumériques aléatoires en majuscule préfixés par deux lettres paramétrées au niveau de l’application', login_cpt_min varchar(30) comment 'login du candidat', pwd_cpt_min varchar(150) NOT NULL comment 'mot de passe du compte à minima', supann_etu_id_cpt_min varchar(30) comment 'etuId provenant du ldap', tem_valid_cpt_min bit(1) NOT NULL comment 'témoin de validité du compte à minima', tem_valid_mail_cpt_min bit(1) NOT NULL comment 'témoin de validité du mail du compte à minima', dat_fin_valid_cpt_min timestamp NOT NULL comment 'date de fin de validite du compte a minima', dat_cre_cpt_min timestamp NOT NULL comment 'date de création', PRIMARY KEY (id_cpt_min)) comment='table des comptes à minima' ENGINE=InnoDB;
CREATE TABLE candidat (id_candidat int(10) NOT NULL AUTO_INCREMENT comment 'identifiant du candidat', cod_civ varchar(4) NOT NULL comment 'code de la civilite', nom_pat_candidat varchar(50) NOT NULL comment 'nom patronymique du candidat', nom_usu_candidat varchar(50) comment 'nom usuel du candidat', prenom_candidat varchar(50) NOT NULL comment 'prénom du candidat', autre_pren_candidat varchar(50) comment 'autre prénom du candidat', dat_naiss_candidat date NOT NULL comment 'date naissance du candidat', cod_pay_nat varchar(3) NOT NULL comment 'nationalité du candidat', ine_candidat varchar(10) comment 'INE du candidat', cle_ine_candidat varchar(1) comment 'INE du candidat', cod_pay_naiss varchar(3) NOT NULL comment 'code Apogee pays de naissance du candidat', cod_dep_naiss_candidat varchar(3) comment 'code Apogee departement de naissance candidat', lib_ville_naiss_candidat varchar(50) NOT NULL comment 'ville de naissance du candidat', id_adr int(10) comment 'identifiant de l''adresse', tel_candidat varchar(20) comment 'numéro de téléphone du candidat', tel_port_candidat varchar(20) comment 'numéro de téléphone portable du candidat', cod_langue varchar(5) NOT NULL comment 'code langue', id_cpt_min int(10) NOT NULL UNIQUE comment 'id du compte a minima', tem_updatable_candidat bit(1) NOT NULL comment 'temoin indiquant que les données proviennent d''apogee', PRIMARY KEY (id_candidat)) comment='table des candidats' ENGINE=InnoDB;
CREATE TABLE langue (cod_langue varchar(5) NOT NULL comment 'code de la langue (important, utile aux traductions fr, en, etc..)', lib_langue varchar(20) NOT NULL comment 'libellé de la langue', tem_defaut_langue bit(1) NOT NULL comment 'témoin de la langue par défaut de l''application', tes_langue bit(1) NOT NULL comment 'temoin en service', PRIMARY KEY (cod_langue)) comment='table des langues' ENGINE=InnoDB;
CREATE TABLE centre_candidature (id_ctr_cand int(10) NOT NULL AUTO_INCREMENT comment 'identifiant du centre de candidature', cod_ctr_cand varchar(20) NOT NULL UNIQUE comment 'code du centre de candidature', lib_ctr_cand varchar(50) NOT NULL comment 'libellé du centre de candidature', id_typ_dec_fav int(10) NOT NULL comment 'L’avis favorable à envoyer, lors de la validation des types de traitements, aux formations en Accès direct', nb_max_voeux_ctr_cand int(10) NOT NULL comment 'nombre maximum de voeux pour ce centre de candidature', tem_demat_ctr_cand bit(1) NOT NULL comment 'si les pièces justificatives seront dématérialisées ou non pour toutes les formations du centre de candidature', tem_list_comp_ctr_cand bit(1) NOT NULL comment 'activation ou désactivation de la gestion automatique des listes complémentaires', id_typ_dec_fav_list_comp int(10) comment 'avis favorable à envoyer pour la gestion auto des liste complémentaires', dat_deb_depot_ctr_cand date NOT NULL comment 'date de début de dépot des voeux', dat_fin_depot_ctr_cand date NOT NULL comment 'date de fin de dépot des voeux', dat_retour_ctr_cand date NOT NULL comment 'date limite de retour de dossier', dat_confirm_ctr_cand date comment 'date limite de confirmation', dat_publi_ctr_cand date comment 'date de publication des résultats', dat_jury_ctr_cand date comment 'date de jury', tes_ctr_cand bit(1) NOT NULL comment 'témoin en service du centre de candidature', dat_cre_ctr_cand timestamp NOT NULL comment 'date de création', user_cre_ctr_cand varchar(30) NOT NULL comment 'user de création', dat_mod_ctr_cand timestamp NOT NULL comment 'date de modification', user_mod_ctr_cand varchar(30) NOT NULL comment 'user de modification', PRIMARY KEY (id_ctr_cand)) comment='table des centres de candidatures' ENGINE=InnoDB;
CREATE TABLE commission (id_comm int(10) NOT NULL AUTO_INCREMENT comment 'identifiant de la commission', id_ctr_cand int(10) NOT NULL comment 'identifiant du centre de candidature de la commissio', cod_comm varchar(20) NOT NULL UNIQUE comment 'code de la commission', lib_comm varchar(50) NOT NULL comment 'libellé de la commission', mail_comm varchar(80) NOT NULL comment 'mail de contact de la commission', tel_comm varchar(20) comment 'telephone de contact de la commission', fax_comm varchar(20) comment 'fax de la commission', id_adr int(10) NOT NULL comment 'identifiant de l''adresse', comment_retour_comm varchar(255) comment 'commentaire lors du retour de dossier pour la commission', tes_comm bit(1) NOT NULL comment 'temoin en service de la commission', dat_cre_comm timestamp NOT NULL comment 'date de création', user_cre_comm varchar(30) NOT NULL comment 'user de création', dat_mod_comm timestamp NOT NULL comment 'date de modification', user_mod_comm varchar(30) NOT NULL comment 'user de modification', PRIMARY KEY (id_comm)) comment='table des commissions' ENGINE=InnoDB;
CREATE TABLE formation (id_form int(10) NOT NULL AUTO_INCREMENT comment 'identifiant de la formation', id_comm int(10) NOT NULL comment 'identifiant de la commission de la formation', cod_typ_trait varchar(2) NOT NULL comment 'type de traitement de la formation', cod_form varchar(20) NOT NULL UNIQUE comment 'code eCandidat de la formation', lib_form varchar(50) NOT NULL comment 'libellé eCandidat de la formation', cod_etp_vet_apo_form varchar(20) comment 'code etape apogée de la formation', cod_vrs_vet_apo_form varchar(20) comment 'code version etape apogée de la formation', lib_apo_form varchar(120) comment 'libellé apogée de la formation', id_typ_dec_fav int(10) NOT NULL comment 'avis favorable à envoyer, lors de la validation des types de traitements, aux formations en Accès direct', tem_list_comp_form bit(1) NOT NULL comment 'activation ou désactivation de la gestion automatique des listes complémentaires', id_typ_dec_fav_list_comp int(10) comment 'avis favorable à envoyer pour la gestion auto des liste complémentaires', dat_deb_depot_form date NOT NULL comment 'date de début de dépot des voeux', dat_fin_depot_form date NOT NULL comment 'date de fin de dépot des voeux', dat_retour_form date NOT NULL comment 'date limite de retour de dossier', dat_confirm_form date comment 'date limite de confirmation', dat_publi_form date comment 'date de publication des résultats', dat_jury_form date comment 'date de jury', cod_cge varchar(3) NOT NULL comment 'code CGE rattaché', mot_cle_form varchar(500) comment 'mots clé pour la recherche dans l''offre de formation', cod_tpd_etb varchar(2) NOT NULL comment 'type de diplome associé', preselect_date_form date comment 'date de l''épreuve de sélection par défaut', preselect_heure_form time comment 'heure de l''épreuve de sélection par défaut', preselect_lieu_form varchar(100) comment 'lieu de l''épreuve de sélection par défaut', tes_form bit(1) NOT NULL comment 'témoin en service', dat_cre_form timestamp NOT NULL comment 'date de création', user_cre_form varchar(30) NOT NULL comment 'user de création', dat_mod_form timestamp NOT NULL comment 'date de modification', user_mod_form varchar(30) NOT NULL comment 'user de modification', PRIMARY KEY (id_form)) comment='table des formations' ENGINE=InnoDB;
CREATE TABLE type_avis (cod_typ_avis varchar(2) NOT NULL comment 'code du type d''avis', libelle_typ_avis varchar(20) NOT NULL comment 'libelle du type d''avis', PRIMARY KEY (cod_typ_avis)) comment='table des types d''avis' ENGINE=InnoDB;
CREATE TABLE type_decision (id_typ_dec int(10) NOT NULL AUTO_INCREMENT comment 'identifiant du type de decision', cod_typ_avis varchar(2) NOT NULL comment 'type_d''avis correspondant au type de décision', cod_typ_dec varchar(20) NOT NULL UNIQUE comment 'code du type de decision', lib_typ_dec varchar(50) comment 'libellé type de decision', id_i18n_lib_typ_dec int(10) NOT NULL comment 'identifiant i18n du libellé du type de décision', id_mail int(10) NOT NULL comment 'id mail du type de decision', tem_deverse_opi_typ_dec bit(1) NOT NULL comment 'temoin de deversement d''opi pour ce type de decision', tem_definitif_typ_dec bit(1) NOT NULL comment 'temoin pour indiquer si le type de decision est défnitif', tes_typ_dec bit(1) NOT NULL comment 'temoin en service du type de decision', tem_model_typ_dec bit(1) NOT NULL comment 'témoi si le type de decision est un modele', dat_cre_typ_dec timestamp NOT NULL comment 'date de création', user_cre_typ_dec varchar(30) NOT NULL comment 'user de création', dat_mod_typ_dec timestamp NOT NULL comment 'date de modification', user_mod_typ_dec varchar(30) NOT NULL comment 'user de modification', PRIMARY KEY (id_typ_dec)) comment='table des types de décision' ENGINE=InnoDB;
CREATE TABLE mail (id_mail int(10) NOT NULL AUTO_INCREMENT comment 'identifiant du mail', cod_typ_avis varchar(2) comment 'type de décision lié au mail', cod_mail varchar(20) NOT NULL UNIQUE comment 'code du mail', lib_mail varchar(50) NOT NULL comment 'libelle du mail', tem_is_modele_mail bit(1) NOT NULL comment 'temoin si le mail est un modele de mail', tes_mail bit(1) NOT NULL comment 'temoin en service', id_i18n_sujet_mail int(10) NOT NULL comment 'identifiant i18n du sujet du mail', id_i18n_corps_mail int(10) NOT NULL comment 'identifiant i18n du corps du mail', dat_cre_mail timestamp NOT NULL comment 'date de création', user_cre_mail varchar(30) NOT NULL comment 'user de création', dat_mod_mail timestamp NOT NULL comment 'date de modification', user_mod_mail varchar(30) NOT NULL comment 'user de modification', PRIMARY KEY (id_mail)) comment='table des mails' ENGINE=InnoDB;
CREATE TABLE i18n_traduction (id_i18n int(10) NOT NULL comment 'le code (identifiant) de la traduction', cod_langue varchar(5) NOT NULL comment 'code de la langue', val_trad longtext NOT NULL comment 'la valeur de la traduction', PRIMARY KEY (id_i18n, cod_langue)) comment='tables des traductions' ENGINE=InnoDB;
CREATE TABLE i18n (id_i18n int(10) NOT NULL AUTO_INCREMENT comment 'identifiant i18n', cod_typ_trad varchar(20) NOT NULL comment 'code du type de traduction', PRIMARY KEY (id_i18n)) comment='tables des identifiants i18n' ENGINE=InnoDB;
CREATE TABLE motivation_avis (id_motiv int(10) NOT NULL AUTO_INCREMENT comment 'identifiant de la motivation d''avis', cod_motiv varchar(20) NOT NULL UNIQUE comment 'code de la motivation d''avis', lib_motiv varchar(50) NOT NULL comment 'libellé de la motivation', id_i18n_lib_motiv int(10) NOT NULL comment 'identifiant i18n de la motivation d''avis', tes_motiv bit(1) NOT NULL comment 'témoin en service de la motivation d''avis', dat_cre_motiv timestamp NOT NULL comment 'date de création', user_cre_motiv varchar(30) NOT NULL comment 'user de création', dat_mod_motiv timestamp NOT NULL comment 'date de modification', user_mod_motiv varchar(30) NOT NULL comment 'user de modification', PRIMARY KEY (id_motiv)) comment='table des motivations d''avis' ENGINE=InnoDB;
CREATE TABLE type_traitement (cod_typ_trait varchar(2) NOT NULL comment 'code du type de traitement', lib_typ_trait varchar(20) NOT NULL comment 'libellé du type de traitement', tem_final_typ_trait bit(1) NOT NULL comment 'témoin pour les traitements finals', id_i18n_lib_typ_trait int(10) NOT NULL comment 'libellé internationalisé', PRIMARY KEY (cod_typ_trait)) comment='table des types de traitement' ENGINE=InnoDB;
CREATE TABLE adresse (id_adr int(10) NOT NULL AUTO_INCREMENT comment 'identifiant de l''adresse', cod_pay varchar(3) NOT NULL comment 'code du pays de l''adresse', cod_bdi_adr varchar(5) comment 'code postal de l''adresse (fr)', cod_com varchar(5) comment 'code commune de l''adresse (fr)', lib_com_etr_adr varchar(32) comment 'libellé de la commune du candidat', adr1_adr varchar(32) comment 'libellé 1 de l''adresse', adr2_adr varchar(32) comment 'libellé 2 de l''adresse', adr3_adr varchar(32) comment 'libellé 3 de l''adresse', PRIMARY KEY (id_adr)) comment='table des adresses' ENGINE=InnoDB;
CREATE TABLE candidature (id_cand int(10) NOT NULL AUTO_INCREMENT comment 'identifiant de la candidature', id_form int(10) NOT NULL comment 'identifiant de la formation de la candidature', id_candidat int(10) NOT NULL comment 'identifiant du candidat de la candidature', cod_typ_trait varchar(2) NOT NULL comment 'type de traitement de la canidature', tem_valid_typ_trait_cand bit(1) NOT NULL comment 'témoin indiquant que le type de traitement a été validé pour la candidature', cod_typ_statut varchar(2) NOT NULL comment 'code du statut du dossier de la candidature', tem_proposition_cand bit(1) NOT NULL comment 'témoin indiquant que la candidature est une proposition', dat_cre_cand timestamp NOT NULL comment 'date de création', user_cre_cand varchar(30) NOT NULL comment 'user de création', dat_mod_cand timestamp NOT NULL comment 'date de modification', user_mod_cand varchar(30) NOT NULL comment 'user de modification', dat_annul_cand timestamp NULL comment 'date d''annulation de la candidature', user_annul_cand varchar(20) comment 'login d''annulation de la candidature (si null, c''est le candidat qui a supprimé)', tem_accept_cand bit(1) comment 'temoin si la candidature est asseptee : null->pas encore de choix, 0->refusé, 1->acceptee', dat_accept_cand timestamp NULL comment 'date d''acceptation ou de refus de la candidature', user_accept_cand varchar(20) comment 'login d''acceptation ou de refus de la candidature', dat_opi_cand timestamp NULL comment 'date de l''opi pour cette candidature', dat_mod_typ_statut_cand timestamp NULL comment 'date d''annulation de la candidature', PRIMARY KEY (id_cand)) comment='table des candidatures' ENGINE=InnoDB;
CREATE TABLE siscol_mention_niv_bac (cod_mnb varchar(2) NOT NULL comment 'Code Mention Niveau Bac', lib_mnb varchar(40) NOT NULL comment 'Libelle Long Mention Niveau Bac', lic_mnb varchar(10) NOT NULL comment 'Libelle Court Mention Niveau Bac', tem_en_sve_mnb bit(1) NOT NULL comment 'Temoin Code en  Service', CONSTRAINT MNB_PK PRIMARY KEY (cod_mnb)) comment='Rérérentiel SiScol : Mentions accordees au baccalaureat' ENGINE=InnoDB;
CREATE TABLE siscol_mention (cod_men varchar(2) NOT NULL comment 'Code mention', lic_men varchar(10) NOT NULL comment 'Libelle court mention', lib_men varchar(50) NOT NULL comment 'Libelle long mention', tem_en_sve_men bit(1) NOT NULL comment 'Temoin en service mention', CONSTRAINT MEN_PK PRIMARY KEY (cod_men)) comment='Rérérentiel SiScol : Mention' ENGINE=InnoDB;
CREATE TABLE siscol_dip_aut_cur (cod_dac varchar(7) NOT NULL comment 'Code Diplome Autre Cursus', lib_dac varchar(60) NOT NULL comment 'Libelle Long Diplome Autre Cursus', lic_dac varchar(10) NOT NULL comment 'Libelle Court Diplome Autre Cursus', tem_en_sve_dac bit(1) NOT NULL comment 'Temoin en Service', CONSTRAINT DAC_PK PRIMARY KEY (cod_dac)) comment='Rérérentiel SiScol : Diplomes de l"enseignement superieur' ENGINE=InnoDB;
CREATE TABLE siscol_bac_oux_equ (cod_bac varchar(4) NOT NULL comment 'Code Baccalaureat ou Equivalence', lib_bac varchar(40) NOT NULL comment 'Libelle Long Baccalaureat ou Equivalence', lic_bac varchar(10) NOT NULL comment 'Libelle Court Baccalaureat ou Equivalence', tem_nat_bac bit(1) NOT NULL comment 'Temoin Nature de Bac', tem_en_sve_bac bit(1) comment 'témoin en service', CONSTRAINT BAC_PK PRIMARY KEY (cod_bac)) comment='Rérérentiel SiScol : Baccalaureats ou equivalences' ENGINE=InnoDB;
CREATE TABLE siscol_centre_gestion (cod_cge varchar(3) NOT NULL comment 'Code Centre de Gestion', lib_cge varchar(40) NOT NULL comment 'Libelle Long Centre de Gestion', lic_cge varchar(10) NOT NULL comment 'Libelle Court Centre de Gestion', tem_en_sve_cge bit(1) NOT NULL comment 'Temoin Code en Service', CONSTRAINT CGE_PK PRIMARY KEY (cod_cge)) comment='Rérérentiel SiScol : Centres de gestion' ENGINE=InnoDB;
CREATE TABLE siscol_commune (cod_com varchar(5) NOT NULL comment 'Code INSEE Commune', cod_dep varchar(3) NOT NULL comment 'Code Departement', lib_com varchar(32) NOT NULL comment 'libelle Long Commune', tem_en_sve_com bit(1) NOT NULL comment 'Temoin en Service', CONSTRAINT COM_PK PRIMARY KEY (cod_com)) comment='Rérérentiel SiScol : Table des communes' ENGINE=InnoDB;
CREATE TABLE siscol_departement (cod_dep varchar(3) NOT NULL comment 'Code Departement', lib_dep varchar(40) NOT NULL comment 'Libelle Long Departement', lic_dep varchar(10) NOT NULL comment 'Libelle Court Departement', tem_en_sve_dep bit(1) NOT NULL comment 'Temoin Code en Service', CONSTRAINT DEP_PK PRIMARY KEY (cod_dep)) comment='Rérérentiel SiScol : Table des departements' ENGINE=InnoDB;
CREATE TABLE siscol_etablissement (cod_etb varchar(8) NOT NULL comment 'Code National de l"Etablissement', cod_dep varchar(3) NOT NULL comment 'Code Departement', cod_com varchar(5) comment 'code commune', lib_etb varchar(40) NOT NULL comment 'Libelle Long Etablissement', lic_etb varchar(10) NOT NULL comment 'Libelle Court Etablissement', tem_en_sve_etb bit(1) NOT NULL comment 'Temoin Code en Service', lib_web_etb varchar(120) comment 'Libellé Web', CONSTRAINT ETB_PK PRIMARY KEY (cod_etb)) comment='Rérérentiel SiScol : Etablissements francais sec ou sup' ENGINE=InnoDB;
CREATE TABLE siscol_pays (cod_pay varchar(3) NOT NULL comment 'Code Pays INSEE', lib_pay varchar(40) NOT NULL comment 'Libelle Long Pays', lic_pay varchar(10) NOT NULL comment 'Libelle Court Pays', lib_nat varchar(40) NOT NULL comment 'Libelle Nationalite', tem_en_sve_pay bit(1) NOT NULL comment 'Temoin en Service', CONSTRAINT PAY_PK PRIMARY KEY (cod_pay)) comment='Rérérentiel SiScol : Table des pays' ENGINE=InnoDB;
CREATE TABLE siscol_typ_diplome (cod_tpd_etb varchar(2) NOT NULL comment 'Code Type Diplome Etablissement', lib_tpd varchar(40) NOT NULL comment 'Libelle Long Type Diplome SISE', lic_tpd varchar(10) NOT NULL comment 'Libelle Court Type Diplome SISE', tem_en_sve_tpd bit(1) NOT NULL comment 'Temoin en Service', CONSTRAINT TPD_PK PRIMARY KEY (cod_tpd_etb)) comment='Rérérentiel SiScol : Typologie des diplomes' ENGINE=InnoDB;
CREATE TABLE siscol_utilisateur (cod_uti varchar(30) NOT NULL comment 'Code Utilisateur D"APOGEE connu d"ORACLE', cod_cge varchar(3) comment '(COPIED)Code Centre de Gestion d"appartenance de l"utilisateur', lib_cmt_uti varchar(200) comment 'Libelle long associe a l"utilisateur', tem_en_sve_uti bit(1) NOT NULL comment 'Temoin code en service de l"utilisateur', adr_mail_uti varchar(200) comment 'Adresse mail de l''utilisateur', CONSTRAINT UTI_PK PRIMARY KEY (cod_uti), CONSTRAINT DMD978A CHECK ( TEM_AUT_SPE_MCC IN ( 'O','N' ) )) comment='Rérérentiel SiScol : Table des utilisateurs' ENGINE=InnoDB;
CREATE TABLE candidat_bac_ou_equ (id_candidat int(10) NOT NULL comment 'identifiant du candidat', cod_pay varchar(3) comment 'code du pays', cod_dep varchar(3) comment 'code du departement', cod_com varchar(5) comment 'code de la commune', cod_etb varchar(8) comment 'code de l''etablissement', annee_obt_bac int(4) comment 'année d''obtention du bac', cod_bac varchar(4) NOT NULL comment 'code du bac', cod_mnb varchar(2) comment 'code de la mention', tem_updatable_bac bit(1) NOT NULL comment 'temoin indiquant si le bac a été récupéré d''apogee', PRIMARY KEY (id_candidat)) comment='table des bacs ou equ du candidat' ENGINE=InnoDB;
CREATE TABLE candidat_cursus_post_bac (id_cursus int(10) NOT NULL AUTO_INCREMENT comment 'identifiant du cursus', id_candidat int(10) NOT NULL comment 'identifiant du candidat', cod_pay varchar(3) NOT NULL comment 'code du pays', cod_dep varchar(3) comment 'code du departement', cod_com varchar(5) comment 'code de la commune', cod_etb varchar(8) comment 'code de l''etablissement', annee_univ_cursus int(4) NOT NULL comment 'année universitaire', cod_dac varchar(7) NOT NULL comment 'code de diplome', cod_men varchar(2) comment 'code de mention', lib_cursus varchar(255) comment 'libellé du cursus', tem_obtenu_cursus bit(1) comment 'témoin d''obtention (1 obtenu, 0, pas obtenu, null en cours)', PRIMARY KEY (id_cursus)) comment='table des cursus post bac (interne et externe)' ENGINE=InnoDB;
CREATE TABLE candidat_cursus_pro (id_cursus_pro int(10) NOT NULL AUTO_INCREMENT comment 'identifiant du curusus', id_candidat int(10) NOT NULL comment 'identifiant du candidat', annee_cursus_pro int(10) NOT NULL comment 'annee du curusus', duree_cursus_pro varchar(20) NOT NULL comment 'durée du curusus', organisme_cursus_pro varchar(50) NOT NULL comment 'organisme ou employeur du curusus', intitule_cursus_pro varchar(50) NOT NULL comment 'intitulé du curusus', objectif_cursus_pro varchar(500) comment 'descriptif du curusus', PRIMARY KEY (id_cursus_pro)) comment='table des cursus pro ou stage' ENGINE=InnoDB;
CREATE TABLE type_statut (cod_typ_statut varchar(2) NOT NULL comment 'code du type de statut', lib_typ_statut varchar(20) NOT NULL comment 'libellé du type de statut', id_i18n_lib_typ_statut int(10) NOT NULL comment 'idi18n de traduction de statut d''un dossier', PRIMARY KEY (cod_typ_statut)) comment='table des type de statut du dossier de candidature' ENGINE=InnoDB;
CREATE TABLE type_decision_candidature (id_type_dec_cand int(10) NOT NULL AUTO_INCREMENT comment 'identifiant de la décision prise sur une candidature', id_cand int(10) NOT NULL comment 'identifiant de la canidature', id_typ_dec int(10) NOT NULL comment 'identifiant du type de decision', id_motiv int(10) comment 'identifiant de la motivation d''avis', list_comp_rang_typ_dec_cand int(10) comment 'rang de liste complémentaire', comment_type_dec_cand varchar(500) comment 'éventuel commentaire', preselect_date_type_dec_cand date comment 'Date de l''épreuve de sélection', preselect_heure_type_dec_cand time comment 'Heure de l''épreuve de sélection', preselect_lieu_type_dec_cand varchar(100) comment 'Lieu de l''épreuve de sélection', tem_appel_type_dec_cand bit(1) NOT NULL comment 'témoin pour indiquer que l''avis est un appel', dat_cre_type_dec_cand timestamp NOT NULL comment 'date de création', user_cre_type_dec_cand varchar(30) NOT NULL comment 'user de création', tem_valid_type_dec_cand bit(1) NOT NULL comment 'témoin pour indiquer que l''avis a été validé', dat_valid_type_dec_cand timestamp NULL comment 'date de validation', user_valid_type_dec_cand varchar(30) comment 'user de validation', PRIMARY KEY (id_type_dec_cand)) comment='table de l''historique des decisions d''une canidature' ENGINE=InnoDB;
CREATE TABLE piece_justif (id_pj int(10) NOT NULL AUTO_INCREMENT comment 'identifiant de la pièce justificative', cod_pj varchar(20) NOT NULL UNIQUE comment 'code de la pièce justificative', lib_pj varchar(50) NOT NULL comment 'libellé de la pj', tes_pj bit(1) NOT NULL comment 'témoin en service de la pièce justificative', id_i18n_lib_pj int(10) NOT NULL comment 'identifiant i18n du libellé de la pj', id_fichier int(10) comment 'fichier eventuel rattaché à la pièce', tem_commun_pj bit(1) NOT NULL comment 'témoin commun à toutes les formations de la pièce justificative', tem_conditionnel_pj bit(1) NOT NULL comment 'témoin de pièce conditionnel de la pièce justificative', id_ctr_cand int(10) comment 'identifiant du centre de candidature éventuel', dat_cre_pj timestamp NOT NULL comment 'date de création', user_cre_pj varchar(30) NOT NULL comment 'user de création', dat_mod_pj timestamp NOT NULL comment 'date de modification', user_mod_pj varchar(30) NOT NULL comment 'user de modification', PRIMARY KEY (id_pj)) comment='table des pièces justificatives' ENGINE=InnoDB;
CREATE TABLE pj_form (id_pj int(10) NOT NULL comment 'identifiant de la pj', id_form int(10) NOT NULL comment 'identifiant de la formation', PRIMARY KEY (id_pj, id_form)) comment='table associative liant des pièces et des formations' ENGINE=InnoDB;
CREATE TABLE pj_cand (id_pj int(10) NOT NULL comment 'identifiant de la pj', id_cand int(10) NOT NULL comment 'identifiant de la candidature', id_fichier int(10) comment 'fichier en demat''', cod_typ_statut_piece varchar(2) comment 'code du statut de la pj', lib_file_pj_cand varchar(500) comment 'libellé de la pj déposée par le candidat', tem_concern_pj_cand bit(1) comment 'témoin pour savoir si le candidat est concerné par cette pieces conditionnelle', comment_pj_cand varchar(500) comment 'commentaire éventuel du gestionnaire', dat_cre_pj_cand timestamp NOT NULL comment 'date de création', user_cre_pj_cand varchar(30) NOT NULL comment 'user de création', dat_mod_pj_cand timestamp NOT NULL comment 'date de modification', user_mod_pj_cand varchar(30) NOT NULL comment 'user de modification', dat_mod_statut_pj_cand timestamp NULL comment 'date de modif du statut de la piece', user_mod_statut_pj_cand varchar(30) comment 'user de modif de statut de la piece', PRIMARY KEY (id_pj, id_cand)) comment='table des pj déposées par le candidat pour une formation' ENGINE=InnoDB;
CREATE TABLE type_statut_piece (cod_typ_statut_piece varchar(2) NOT NULL comment 'code du type de statut', lib_typ_statut_piece varchar(20) NOT NULL comment 'libellé du type de statut', id_i18n_lib_typ_statut_piece int(10) NOT NULL comment 'idi18n de traduction de statut d''une piece', PRIMARY KEY (cod_typ_statut_piece)) comment='table de type de statut des pièces (pj et formulaire)' ENGINE=InnoDB;
CREATE TABLE formulaire (id_formulaire int(10) NOT NULL AUTO_INCREMENT comment 'identifiant du formulaire', id_formulaire_limesurvey int(11) NOT NULL comment 'identifiant limesurvey du formulaire', cod_formulaire varchar(20) NOT NULL UNIQUE comment 'code du formulaire', lib_formulaire varchar(50) NOT NULL comment 'libellé du formulaire', id_i18n_lib_formulaire int(10) NOT NULL comment 'identifiant i18n du libellé du formulaire', id_i18n_url_formulaire int(10) NOT NULL comment 'identifiant i18n de l''url du formulaire', tes_formulaire bit(1) NOT NULL comment 'temoin en service du formulaire', tem_conditionnel_formulaire bit(1) NOT NULL comment 'temoin de piece conditionnelle du formulaire', tem_commun_formulaire bit(1) NOT NULL comment 'temoin de commun a toute les formation du formulaire', id_ctr_cand int(10) comment 'identifiant du centre de canidature', dat_cre_formulaire timestamp NOT NULL comment 'date de création', user_cre_formulaire varchar(30) NOT NULL comment 'user de création', dat_mod_formulaire timestamp NOT NULL comment 'date de modification', user_mod_formulaire varchar(30) NOT NULL comment 'user de modification', PRIMARY KEY (id_formulaire)) comment='table des formulaires' ENGINE=InnoDB;
CREATE TABLE formulaire_form (id_formulaire int(10) NOT NULL comment 'identifiant du formulaire', id_form int(10) NOT NULL comment 'identifiant de la formation', PRIMARY KEY (id_formulaire, id_form)) comment='table de jointure formulaires-formations' ENGINE=InnoDB;
CREATE TABLE formulaire_cand (id_formulaire int(10) NOT NULL comment 'identifiant du formulaire', id_cand int(10) NOT NULL comment 'identifiant de la candidature', cod_typ_statut_piece varchar(2) comment 'statut de la pièce', tem_concern_formulaire_cand bit(1) comment 'témoin pour savoir si le candidat est concerné par ce formulaire', reponses_formulaire_cand longtext comment 'les réponses du candidat', dat_cre_formulaire_cand timestamp NOT NULL comment 'date de création', user_cre_formulaire_cand varchar(30) NOT NULL comment 'user de création', dat_reponse_formulaire_cand timestamp NULL comment 'date de réponse du formulaire', dat_mod_formulaire_cand timestamp NOT NULL comment 'date de modification', user_mod_formulaire_cand varchar(30) NOT NULL comment 'user de modification', PRIMARY KEY (id_formulaire, id_cand)) comment='table des formulaires de la candidature' ENGINE=InnoDB;
CREATE TABLE parametre (cod_param varchar(20) NOT NULL comment 'code du paramètre', lib_param varchar(100) NOT NULL comment 'libellé du paramètre', val_param varchar(100) NOT NULL comment 'valeur du paramètre', typ_param varchar(20) NOT NULL comment 'type du paramètre', PRIMARY KEY (cod_param)) comment='table des paramètres' ENGINE=InnoDB;
CREATE TABLE droit_fonctionnalite (cod_fonc varchar(20) NOT NULL comment 'code de la fonctionnalité', lib_fonc varchar(255) NOT NULL comment 'libellé de la fonctionnalité', PRIMARY KEY (cod_fonc)) comment='table des fonctionnalités' ENGINE=InnoDB;
CREATE TABLE droit_profil (id_profil int(10) NOT NULL AUTO_INCREMENT comment 'identifiant du profil', cod_profil varchar(20) NOT NULL UNIQUE comment 'code du profil', lib_profil varchar(255) NOT NULL comment 'libellé du profil', tem_admin_profil bit(1) NOT NULL comment 'témoin indiquant que le profil est administrateur tech ou scol centrale', tem_ctr_cand_profil bit(1) NOT NULL comment 'témoin indiquant que le profil est scol central', tem_updatable bit(1) NOT NULL comment 'temoin pour savoir si le droit est modifiable', tes_profil bit(1) NOT NULL comment 'témoin en service du profil', dat_cre_profil timestamp NOT NULL comment 'date de création', user_cre_profil varchar(30) NOT NULL comment 'user de création', dat_mod_profil timestamp NOT NULL comment 'date de modification', user_mod_profil varchar(30) NOT NULL comment 'user de modification', PRIMARY KEY (id_profil)) comment='table des profils' ENGINE=InnoDB;
CREATE TABLE droit_profil_ind (id_droit_profil_ind int(10) NOT NULL AUTO_INCREMENT comment 'identifiant du user profil', login_ind varchar(10) NOT NULL comment 'login de l''individu', id_profil int(10) NOT NULL comment 'identifiant du profil', PRIMARY KEY (id_droit_profil_ind)) comment='table des profils associé à des logins' ENGINE=InnoDB;
CREATE TABLE droit_profil_fonc (id_profil int(10) NOT NULL comment 'id du profil', cod_fonc varchar(20) NOT NULL comment 'code de la fonctionnalité', tem_read_only bit(1) NOT NULL comment 'temoin si la fonctionnalité est en read-only pour ce profil', PRIMARY KEY (id_profil, cod_fonc)) comment='table d''association droit fonctionnalité' ENGINE=InnoDB;
CREATE TABLE batch (cod_batch varchar(30) NOT NULL comment 'code du batch', lib_batch varchar(50) NOT NULL comment 'libellé du batch', tes_batch bit(1) NOT NULL comment 'témoin en service', tem_is_launch_imedia_batch bit(1) NOT NULL comment 'témoin indiquant si le job vient d''etre lancé manuellement', tem_lundi_batch bit(1) NOT NULL comment 'témoin si le lancement doit se faire le lundi', tem_mardi_batch bit(1) NOT NULL comment 'témoin si le lancement doit se faire le mardi', tem_mercr_batch bit(1) NOT NULL comment 'témoin si le lancement doit se faire le mercredi', tem_jeudi_batch bit(1) NOT NULL comment 'témoin si le lancement doit se faire le jeudi', tem_vendredi_batch bit(1) NOT NULL comment 'témoin si le lancement doit se faire le vendredi', tem_samedi_batch bit(1) NOT NULL comment 'témoin si le lancement doit se faire le samedi', tem_diman_batch bit(1) NOT NULL comment 'témoin si le lancement doit se faire le dimanche', fixe_hour_batch time NOT NULL comment 'heure spécifique du lancement du job', fixe_day_batch int(10) comment 'jour de lancement du batch', fixe_month_batch int(10) comment 'mois de lancement du batch', fixe_year_batch int(10) comment 'jour fixe de lancement du batch', last_dat_execution_batch timestamp NULL comment 'date de la deniere execution', PRIMARY KEY (cod_batch)) comment='table des batchs' ENGINE=InnoDB;
CREATE TABLE batch_histo (id_batch_histo int(10) NOT NULL AUTO_INCREMENT comment 'identifiant de l''historique', cod_batch varchar(30) NOT NULL comment 'code du batch', date_deb_batch_histo timestamp NULL comment 'date de début du batch', date_fin_batch_histo timestamp NULL comment 'date de fin de lancement', state_batch_histo varchar(10) comment 'état du batch', PRIMARY KEY (id_batch_histo)) comment='table d''historique de lancement des jobs' ENGINE=InnoDB;
CREATE TABLE batch_run (dat_last_check_run timestamp NOT NULL comment 'valeur du dernier run de batch', PRIMARY KEY (dat_last_check_run)) comment='table du dernier run' ENGINE=InnoDB;
CREATE TABLE campagne (id_camp int(10) NOT NULL AUTO_INCREMENT comment 'id de la campagne', cod_camp varchar(20) NOT NULL UNIQUE comment 'code de la campagne', lib_camp varchar(50) NOT NULL comment 'libellé de la campagne', dat_deb_camp date NOT NULL comment 'date début de la campagne', dat_fin_camp date NOT NULL comment 'date fin de la campagne', tes_camp bit(1) NOT NULL comment 'temoin en service de la campagne', dat_activat_prev_camp timestamp NULL comment 'date time d''activation prévisionnel', dat_activat_effec_camp timestamp NULL comment 'date time d''activation effectif', dat_archiv_camp timestamp NULL comment 'date d''archivage effectif', dat_destruct_effec_camp timestamp NULL comment 'date time de destruction des dossier effectif', archiv_id_camp int(10) comment 'code de la campagne lié --> archivage/activation', PRIMARY KEY (id_camp)) comment='table des campagne de candidature' ENGINE=InnoDB;
CREATE TABLE opi (id_cand int(10) NOT NULL comment 'identifiant de la candidature', dat_cre_opi timestamp NOT NULL comment 'date de création de l''opi', dat_passage_opi timestamp NULL comment 'date de création de l''opi', PRIMARY KEY (id_cand)) comment='table des opi en attente' ENGINE=InnoDB;
CREATE TABLE type_traduction (cod_typ_trad varchar(20) NOT NULL comment 'code du type de la traduction', lib_typ_trad varchar(30) NOT NULL comment 'libellé du type de la traduction', length_typ_trad int(10) NOT NULL comment 'taille du champs du type de la traduction', PRIMARY KEY (cod_typ_trad)) comment='table des types de traduction' ENGINE=InnoDB;
CREATE TABLE individu (login_ind varchar(10) NOT NULL comment 'login de l''individu', libelle_ind varchar(255) NOT NULL comment 'displayName de l''individu', mail_ind varchar(255) comment 'mail de l''individu', PRIMARY KEY (login_ind)) comment='table des individus' ENGINE=InnoDB;
CREATE TABLE gestionnaire (id_droit_profil_ind int(10) NOT NULL comment 'identifiant du profil individu', id_ctr_cand int(10) NOT NULL comment 'identifiant du centre de candidature', login_apo_gest varchar(20) comment 'login apogee eventuel du gestionnaire', cod_cge varchar(3) comment 'code cge du gestionnaire', PRIMARY KEY (id_droit_profil_ind)) comment='table des gestionnaires de ctr candidature' ENGINE=InnoDB;
CREATE TABLE commission_membre (id_droit_profil_ind int(10) NOT NULL comment 'identifiant du profil individu', id_comm int(10) NOT NULL comment 'identifiant de la commission', tem_is_president bit(1) NOT NULL comment 'temoin is president', PRIMARY KEY (id_droit_profil_ind)) comment='table des membres de commissions' ENGINE=InnoDB;
CREATE TABLE fichier (id_fichier int(10) NOT NULL AUTO_INCREMENT comment 'identifiant du fichier', cod_fichier varchar(50) NOT NULL comment 'le code du fichier composé de son type de la pièce et de l''id de la pièce', nom_fichier varchar(100) NOT NULL comment 'le fichier lui même', file_fichier varchar(500) NOT NULL comment 'le libellé du fichier', typ_fichier char(1) NOT NULL comment 'le type de fichier G = gestionnaire, C=candidat', typ_stockage_fichier char(1) NOT NULL comment 'type de stockage de fichier-->soit fileSystem soit cmis', auteur_fichier varchar(50) NOT NULL comment 'l''auteur du fichier', dat_cre_fichier timestamp NOT NULL comment 'date de création', PRIMARY KEY (id_fichier)) comment='table des fichiers' ENGINE=InnoDB;
CREATE TABLE version (cod_version varchar(20) NOT NULL comment 'code de version', val_version varchar(10) NOT NULL comment 'valeur de la version', dat_version timestamp NOT NULL, PRIMARY KEY (cod_version)) comment='table des versions' ENGINE=InnoDB;
CREATE TABLE siscol_com_bdi (cod_com varchar(5) NOT NULL comment 'code de la commune', cod_bdi varchar(5) NOT NULL comment 'code postal', PRIMARY KEY (cod_com, cod_bdi)) comment='Referentiel SiScol : association code commune, code postal' ENGINE=InnoDB;
CREATE TABLE siscol_annee_uni (cod_anu varchar(4) NOT NULL comment 'Code Annee Universitaire', eta_anu_iae varchar(1) NOT NULL comment 'Etat de l''Annee Universitaire pour l''Inscription Administrative', lib_anu varchar(40) NOT NULL comment 'Libelle Long Annee Universitaire', lic_anu varchar(10) NOT NULL comment 'Libelle Court Annee Universitaire', PRIMARY KEY (cod_anu)) comment='Rérérentiel SiScol : Table des années universitaires' ENGINE=InnoDB;
CREATE TABLE civilite (cod_civ varchar(4) NOT NULL comment 'code de la civilité', lib_civ varchar(255) NOT NULL comment 'libellé de la civilité', cod_apo varchar(1) NOT NULL comment 'code apogée correspondant', PRIMARY KEY (cod_civ)) comment='table des civilités' ENGINE=InnoDB;
CREATE TABLE candidat_cursus_interne (id_cursus_interne int(10) NOT NULL AUTO_INCREMENT comment 'identifiant du cursus interne', id_candidat int(10) NOT NULL comment 'identifiant du candidat', annee_univ_cursus_interne int(4) comment 'annee universitaire du cursus interne', cod_vet_cursus_interne varchar(100) comment 'code de la vet du cursus interne', lib_cursus_interne varchar(255) comment 'libelle du cursus interne', cod_men_cursus_interne varchar(2) comment 'code de la mention du cursus interne', cod_tre_cursus_interne varchar(4) comment 'temoin d''obention du cursus interne', PRIMARY KEY (id_cursus_interne)) comment='table des cursus interne du candidat' ENGINE=InnoDB;
CREATE TABLE candidat_stage (id_stage int(10) NOT NULL AUTO_INCREMENT comment 'identifiant du stage', id_candidat int(10) NOT NULL comment 'identifiant du candidat', annee_stage int(10) NOT NULL comment 'année du stage', duree_stage varchar(20) NOT NULL comment 'durée du stage', organisme_stage varchar(50) NOT NULL comment 'organisme ou employeur du stage', descriptif_stage varchar(500) NOT NULL comment 'descriptif du stage', nb_h_sem_stage int(3) comment 'nb d''heure / semaine du stage', PRIMARY KEY (id_stage)) comment='table des stages d''un candidat' ENGINE=InnoDB;
CREATE TABLE siscol_typ_resultat (cod_tre varchar(4) NOT NULL comment 'code type resultat', lib_tre varchar(50) NOT NULL comment 'libellé type resultat', lic_tre varchar(20) NOT NULL comment 'libellé court type resultat', tem_en_sve_tre bit(1) NOT NULL comment 'temoin en service type résultat', PRIMARY KEY (cod_tre)) comment='table des types de résultats' ENGINE=InnoDB;
CREATE TABLE faq (id_faq int(10) NOT NULL AUTO_INCREMENT comment 'id element faq', lib_faq varchar(50) NOT NULL comment 'libellé element faq', id_i18n_question_faq int(10) NOT NULL comment 'id18n traduction question', id_i18n_reponse_faq int(10) NOT NULL comment 'id18n traduction reponse', order_faq int(10) NOT NULL comment 'ordre d''affichage de la question', PRIMARY KEY (id_faq)) comment='table des elements FAQ' ENGINE=InnoDB;
ALTER TABLE candidat ADD INDEX fk_candidat_langue_id_langue (cod_langue), ADD CONSTRAINT fk_candidat_langue_id_langue FOREIGN KEY (cod_langue) REFERENCES langue (cod_langue);
ALTER TABLE commission ADD INDEX fk_commission_centre_candidature_id_ctr_cand (id_ctr_cand), ADD CONSTRAINT fk_commission_centre_candidature_id_ctr_cand FOREIGN KEY (id_ctr_cand) REFERENCES centre_candidature (id_ctr_cand);
ALTER TABLE type_decision ADD INDEX fktype_decision_type_avis_cod_typ_avis (cod_typ_avis), ADD CONSTRAINT fktype_decision_type_avis_cod_typ_avis FOREIGN KEY (cod_typ_avis) REFERENCES type_avis (cod_typ_avis);
ALTER TABLE centre_candidature ADD INDEX fk_centre_candidature_typ_decision_id_typ_dec_fav (id_typ_dec_fav), ADD CONSTRAINT fk_centre_candidature_typ_decision_id_typ_dec_fav FOREIGN KEY (id_typ_dec_fav) REFERENCES type_decision (id_typ_dec);
ALTER TABLE centre_candidature ADD INDEX fk_centre_candidature_typ_decision_id_typ_dec_fav_list_comp (id_typ_dec_fav_list_comp), ADD CONSTRAINT fk_centre_candidature_typ_decision_id_typ_dec_fav_list_comp FOREIGN KEY (id_typ_dec_fav_list_comp) REFERENCES type_decision (id_typ_dec);
ALTER TABLE type_decision ADD INDEX fk_type_decision_mail_id_mail (id_mail), ADD CONSTRAINT fk_type_decision_mail_id_mail FOREIGN KEY (id_mail) REFERENCES mail (id_mail);
ALTER TABLE mail ADD INDEX fk_mail_type_avis_cod_typ_avis (cod_typ_avis), ADD CONSTRAINT fk_mail_type_avis_cod_typ_avis FOREIGN KEY (cod_typ_avis) REFERENCES type_avis (cod_typ_avis);
ALTER TABLE formation ADD INDEX fk_formation_type_decision_id_typ_dec_fav_list_comp (id_typ_dec_fav_list_comp), ADD CONSTRAINT fk_formation_type_decision_id_typ_dec_fav_list_comp FOREIGN KEY (id_typ_dec_fav_list_comp) REFERENCES type_decision (id_typ_dec);
ALTER TABLE commission_membre ADD INDEX fk_commission_membre_commission_id_comm (id_comm), ADD CONSTRAINT fk_commission_membre_commission_id_comm FOREIGN KEY (id_comm) REFERENCES commission (id_comm);
ALTER TABLE formation ADD INDEX fk_formation_type_decision_id_typ_dec_fav_form (id_typ_dec_fav), ADD CONSTRAINT fk_formation_type_decision_id_typ_dec_fav_form FOREIGN KEY (id_typ_dec_fav) REFERENCES type_decision (id_typ_dec);
ALTER TABLE i18n_traduction ADD INDEX fk_traduction_langue_id_langue (cod_langue), ADD CONSTRAINT fk_traduction_langue_id_langue FOREIGN KEY (cod_langue) REFERENCES langue (cod_langue);
ALTER TABLE i18n_traduction ADD INDEX fk_traduction_i18n_id_i18n (id_i18n), ADD CONSTRAINT fk_traduction_i18n_id_i18n FOREIGN KEY (id_i18n) REFERENCES i18n (id_i18n);
ALTER TABLE mail ADD INDEX fk_mail_i18n_id_i18n_sujet_mail (id_i18n_sujet_mail), ADD CONSTRAINT fk_mail_i18n_id_i18n_sujet_mail FOREIGN KEY (id_i18n_sujet_mail) REFERENCES i18n (id_i18n);
ALTER TABLE mail ADD INDEX fk_mail_i18n_id_i18n_corps_mail (id_i18n_corps_mail), ADD CONSTRAINT fk_mail_i18n_id_i18n_corps_mail FOREIGN KEY (id_i18n_corps_mail) REFERENCES i18n (id_i18n);
ALTER TABLE type_decision ADD INDEX fk_type_decision_i18n_id_i18n_lib_typ_dec (id_i18n_lib_typ_dec), ADD CONSTRAINT fk_type_decision_i18n_id_i18n_lib_typ_dec FOREIGN KEY (id_i18n_lib_typ_dec) REFERENCES i18n (id_i18n);
ALTER TABLE motivation_avis ADD INDEX fk_motivation_avis_i18n_id_i18n_lib_motiv (id_i18n_lib_motiv), ADD CONSTRAINT fk_motivation_avis_i18n_id_i18n_lib_motiv FOREIGN KEY (id_i18n_lib_motiv) REFERENCES i18n (id_i18n);
ALTER TABLE candidat ADD INDEX fk_candidat_adresse_id_adr (id_adr), ADD CONSTRAINT fk_candidat_adresse_id_adr FOREIGN KEY (id_adr) REFERENCES adresse (id_adr);
ALTER TABLE commission ADD INDEX fk_commission_adresse_id_adr (id_adr), ADD CONSTRAINT fk_commission_adresse_id_adr FOREIGN KEY (id_adr) REFERENCES adresse (id_adr);
ALTER TABLE candidature ADD INDEX fk_candidature_formation_id_form (id_form), ADD CONSTRAINT fk_candidature_formation_id_form FOREIGN KEY (id_form) REFERENCES formation (id_form);
ALTER TABLE candidature ADD INDEX fk_candidature_candidat_id_candidat (id_candidat), ADD CONSTRAINT fk_candidature_candidat_id_candidat FOREIGN KEY (id_candidat) REFERENCES candidat (id_candidat);
ALTER TABLE formation ADD INDEX fk_formation_commission_id_comm (id_comm), ADD CONSTRAINT fk_formation_commission_id_comm FOREIGN KEY (id_comm) REFERENCES commission (id_comm);
ALTER TABLE siscol_commune ADD INDEX COM_FK_DEP_01 (cod_dep), ADD CONSTRAINT COM_FK_DEP_01 FOREIGN KEY (cod_dep) REFERENCES siscol_departement (cod_dep) ON UPDATE Cascade ON DELETE Restrict;
ALTER TABLE siscol_etablissement ADD INDEX ETB_FK_DEP_01 (cod_dep), ADD CONSTRAINT ETB_FK_DEP_01 FOREIGN KEY (cod_dep) REFERENCES siscol_departement (cod_dep) ON UPDATE Cascade ON DELETE Restrict;
ALTER TABLE siscol_utilisateur ADD INDEX UTI_FK_CGE_01 (cod_cge), ADD CONSTRAINT UTI_FK_CGE_01 FOREIGN KEY (cod_cge) REFERENCES siscol_centre_gestion (cod_cge) ON UPDATE Cascade ON DELETE Restrict;
ALTER TABLE adresse ADD INDEX fk_adresse_siscol_pays_cod_pay (cod_pay), ADD CONSTRAINT fk_adresse_siscol_pays_cod_pay FOREIGN KEY (cod_pay) REFERENCES siscol_pays (cod_pay);
ALTER TABLE adresse ADD INDEX fk_adresse_siscol_commune_cod_com (cod_com), ADD CONSTRAINT fk_adresse_siscol_commune_cod_com FOREIGN KEY (cod_com) REFERENCES siscol_commune (cod_com);
ALTER TABLE candidat ADD INDEX fk_candidat_siscol_pays_cod_pay_nat (cod_pay_nat), ADD CONSTRAINT fk_candidat_siscol_pays_cod_pay_nat FOREIGN KEY (cod_pay_nat) REFERENCES siscol_pays (cod_pay);
ALTER TABLE candidat ADD INDEX fk_candidat_siscol_pays_cod_pays_naiss (cod_pay_naiss), ADD CONSTRAINT fk_candidat_siscol_pays_cod_pays_naiss FOREIGN KEY (cod_pay_naiss) REFERENCES siscol_pays (cod_pay);
ALTER TABLE candidat_bac_ou_equ ADD INDEX fk_bac_ou_equ_candidat_id_candidat (id_candidat), ADD CONSTRAINT fk_bac_ou_equ_candidat_id_candidat FOREIGN KEY (id_candidat) REFERENCES candidat (id_candidat);
ALTER TABLE candidat_bac_ou_equ ADD INDEX fk_bac_ou_equ_siscol_pays_cod_pay (cod_pay), ADD CONSTRAINT fk_bac_ou_equ_siscol_pays_cod_pay FOREIGN KEY (cod_pay) REFERENCES siscol_pays (cod_pay);
ALTER TABLE candidat_bac_ou_equ ADD INDEX fk_bac_ou_equ_siscol_bac_ou_equ_cod_bac (cod_bac), ADD CONSTRAINT fk_bac_ou_equ_siscol_bac_ou_equ_cod_bac FOREIGN KEY (cod_bac) REFERENCES siscol_bac_oux_equ (cod_bac);
ALTER TABLE candidat_bac_ou_equ ADD INDEX fk_bac_ou_equ_siscol_etablissement_cod_etb (cod_etb), ADD CONSTRAINT fk_bac_ou_equ_siscol_etablissement_cod_etb FOREIGN KEY (cod_etb) REFERENCES siscol_etablissement (cod_etb);
ALTER TABLE candidat_bac_ou_equ ADD INDEX fk_bac_ou_equ_siscol_mention_niv_bac_cod_mnb (cod_mnb), ADD CONSTRAINT fk_bac_ou_equ_siscol_mention_niv_bac_cod_mnb FOREIGN KEY (cod_mnb) REFERENCES siscol_mention_niv_bac (cod_mnb);
ALTER TABLE candidat_bac_ou_equ ADD INDEX fk_bac_ou_equ_siscol_departement_cod_dep (cod_dep), ADD CONSTRAINT fk_bac_ou_equ_siscol_departement_cod_dep FOREIGN KEY (cod_dep) REFERENCES siscol_departement (cod_dep);
ALTER TABLE candidat_bac_ou_equ ADD INDEX fk_bac_ou_equ_siscol_commune_cod_com (cod_com), ADD CONSTRAINT fk_bac_ou_equ_siscol_commune_cod_com FOREIGN KEY (cod_com) REFERENCES siscol_commune (cod_com);
ALTER TABLE formation ADD INDEX fk_formation_siscol_typ_diplome_cod_tpd_etb (cod_tpd_etb), ADD CONSTRAINT fk_formation_siscol_typ_diplome_cod_tpd_etb FOREIGN KEY (cod_tpd_etb) REFERENCES siscol_typ_diplome (cod_tpd_etb);
ALTER TABLE candidat_cursus_post_bac ADD INDEX fk_cursus_siscol_pays_cod_pay (cod_pay), ADD CONSTRAINT fk_cursus_siscol_pays_cod_pay FOREIGN KEY (cod_pay) REFERENCES siscol_pays (cod_pay);
ALTER TABLE candidat_cursus_post_bac ADD INDEX fk_cursus_siscol_commune_cod_com (cod_com), ADD CONSTRAINT fk_cursus_siscol_commune_cod_com FOREIGN KEY (cod_com) REFERENCES siscol_commune (cod_com);
ALTER TABLE candidat_cursus_post_bac ADD INDEX fk_cursus_siscol_departement_cod_dep (cod_dep), ADD CONSTRAINT fk_cursus_siscol_departement_cod_dep FOREIGN KEY (cod_dep) REFERENCES siscol_departement (cod_dep);
ALTER TABLE candidat_cursus_post_bac ADD INDEX fk_cursus_siscol_etablissement_cod_etb (cod_etb), ADD CONSTRAINT fk_cursus_siscol_etablissement_cod_etb FOREIGN KEY (cod_etb) REFERENCES siscol_etablissement (cod_etb);
ALTER TABLE candidat_cursus_post_bac ADD INDEX fk_cursus_siscol_dip_aut_cur_cod_dac (cod_dac), ADD CONSTRAINT fk_cursus_siscol_dip_aut_cur_cod_dac FOREIGN KEY (cod_dac) REFERENCES siscol_dip_aut_cur (cod_dac);
ALTER TABLE candidat_cursus_post_bac ADD INDEX fk_cursus_siscol_mention_cod_men (cod_men), ADD CONSTRAINT fk_cursus_siscol_mention_cod_men FOREIGN KEY (cod_men) REFERENCES siscol_mention (cod_men);
ALTER TABLE formation ADD INDEX fk_formation_siscol_centre_gestion_cod_cge (cod_cge), ADD CONSTRAINT fk_formation_siscol_centre_gestion_cod_cge FOREIGN KEY (cod_cge) REFERENCES siscol_centre_gestion (cod_cge);
ALTER TABLE candidat_cursus_pro ADD INDEX fk_cursus_pro_candidat_id_candidat (id_candidat), ADD CONSTRAINT fk_cursus_pro_candidat_id_candidat FOREIGN KEY (id_candidat) REFERENCES candidat (id_candidat);
ALTER TABLE candidat_cursus_post_bac ADD INDEX fk_cursus_post_bac_candidat_id_candidat (id_candidat), ADD CONSTRAINT fk_cursus_post_bac_candidat_id_candidat FOREIGN KEY (id_candidat) REFERENCES candidat (id_candidat);
ALTER TABLE formation ADD INDEX fk_formation_type_traitement_cod_typ_trait (cod_typ_trait), ADD CONSTRAINT fk_formation_type_traitement_cod_typ_trait FOREIGN KEY (cod_typ_trait) REFERENCES type_traitement (cod_typ_trait);
ALTER TABLE candidature ADD INDEX fk_candidature_type_traitement_cod_typ_trait (cod_typ_trait), ADD CONSTRAINT fk_candidature_type_traitement_cod_typ_trait FOREIGN KEY (cod_typ_trait) REFERENCES type_traitement (cod_typ_trait);
ALTER TABLE candidature ADD INDEX fk_candidature_type_statut_cod_typ_statut (cod_typ_statut), ADD CONSTRAINT fk_candidature_type_statut_cod_typ_statut FOREIGN KEY (cod_typ_statut) REFERENCES type_statut (cod_typ_statut);
ALTER TABLE type_decision_candidature ADD INDEX fk_typ_dec_cand_typ_dec_id_typ_dec (id_typ_dec), ADD CONSTRAINT fk_typ_dec_cand_typ_dec_id_typ_dec FOREIGN KEY (id_typ_dec) REFERENCES type_decision (id_typ_dec);
ALTER TABLE type_decision_candidature ADD INDEX fk_typ_dec_cand_candidature_id_cand (id_cand), ADD CONSTRAINT fk_typ_dec_cand_candidature_id_cand FOREIGN KEY (id_cand) REFERENCES candidature (id_cand);
ALTER TABLE type_decision_candidature ADD INDEX fk_typ_dec_cand_motivation_avis_id_motiv (id_motiv), ADD CONSTRAINT fk_typ_dec_cand_motivation_avis_id_motiv FOREIGN KEY (id_motiv) REFERENCES motivation_avis (id_motiv);
ALTER TABLE piece_justif ADD INDEX fk_piece_justif_ctr_cand_id_ctr_cand (id_ctr_cand), ADD CONSTRAINT fk_piece_justif_ctr_cand_id_ctr_cand FOREIGN KEY (id_ctr_cand) REFERENCES centre_candidature (id_ctr_cand);
ALTER TABLE pj_cand ADD INDEX fk_pj_cand_type_statut_piece_cod (cod_typ_statut_piece), ADD CONSTRAINT fk_pj_cand_type_statut_piece_cod FOREIGN KEY (cod_typ_statut_piece) REFERENCES type_statut_piece (cod_typ_statut_piece);
ALTER TABLE piece_justif ADD INDEX fk_piece_justif_i18n_id_i18n_lib_pj (id_i18n_lib_pj), ADD CONSTRAINT fk_piece_justif_i18n_id_i18n_lib_pj FOREIGN KEY (id_i18n_lib_pj) REFERENCES i18n (id_i18n);
ALTER TABLE formulaire_cand ADD INDEX fk_formulaire_cand_typ_statut_piece_cod (cod_typ_statut_piece), ADD CONSTRAINT fk_formulaire_cand_typ_statut_piece_cod FOREIGN KEY (cod_typ_statut_piece) REFERENCES type_statut_piece (cod_typ_statut_piece);
ALTER TABLE pj_cand ADD INDEX fk_cand_pj_form_cand_pk (id_cand), ADD CONSTRAINT fk_cand_pj_form_cand_pk FOREIGN KEY (id_cand) REFERENCES candidature (id_cand);
ALTER TABLE pj_form ADD INDEX fk_pj_form_form_id_form (id_form), ADD CONSTRAINT fk_pj_form_form_id_form FOREIGN KEY (id_form) REFERENCES formation (id_form);
ALTER TABLE pj_form ADD INDEX fk_pj_form_pj_id_pj (id_pj), ADD CONSTRAINT fk_pj_form_pj_id_pj FOREIGN KEY (id_pj) REFERENCES piece_justif (id_pj);
ALTER TABLE formulaire_cand ADD INDEX fk_formulaire_cand_candidature_id_cand (id_cand), ADD CONSTRAINT fk_formulaire_cand_candidature_id_cand FOREIGN KEY (id_cand) REFERENCES candidature (id_cand);
ALTER TABLE formulaire_form ADD INDEX fk_formulaire_formation_pj_id_pj (id_formulaire), ADD CONSTRAINT fk_formulaire_formation_pj_id_pj FOREIGN KEY (id_formulaire) REFERENCES formulaire (id_formulaire);
ALTER TABLE formulaire_form ADD INDEX fk_formulaire_form_formation_id_form (id_form), ADD CONSTRAINT fk_formulaire_form_formation_id_form FOREIGN KEY (id_form) REFERENCES formation (id_form);
ALTER TABLE formulaire_cand ADD INDEX fk_formulaire_cand_formulaire_id_formulaire (id_formulaire), ADD CONSTRAINT fk_formulaire_cand_formulaire_id_formulaire FOREIGN KEY (id_formulaire) REFERENCES formulaire (id_formulaire);
ALTER TABLE pj_cand ADD INDEX fk_pj_cand_pj_id_pj (id_pj), ADD CONSTRAINT fk_pj_cand_pj_id_pj FOREIGN KEY (id_pj) REFERENCES piece_justif (id_pj);
ALTER TABLE droit_profil_fonc ADD INDEX fk_droit_profil_fonc_droit_fonctionnalite_cod_fonc (cod_fonc), ADD CONSTRAINT fk_droit_profil_fonc_droit_fonctionnalite_cod_fonc FOREIGN KEY (cod_fonc) REFERENCES droit_fonctionnalite (cod_fonc);
ALTER TABLE droit_profil_ind ADD INDEX fk_droit_user_profil_droit_profil_id_profil (id_profil), ADD CONSTRAINT fk_droit_user_profil_droit_profil_id_profil FOREIGN KEY (id_profil) REFERENCES droit_profil (id_profil);
ALTER TABLE droit_profil_fonc ADD INDEX fk_droit_profil_fonc_droit_profil_id_profil (id_profil), ADD CONSTRAINT fk_droit_profil_fonc_droit_profil_id_profil FOREIGN KEY (id_profil) REFERENCES droit_profil (id_profil);
ALTER TABLE batch_histo ADD INDEX fk_batch_histo_batch_cod_batch (cod_batch), ADD CONSTRAINT fk_batch_histo_batch_cod_batch FOREIGN KEY (cod_batch) REFERENCES batch (cod_batch);
ALTER TABLE compte_minima ADD INDEX fk_camp_cpt_min_id_camp (id_camp), ADD CONSTRAINT fk_camp_cpt_min_id_camp FOREIGN KEY (id_camp) REFERENCES campagne (id_camp);
ALTER TABLE opi ADD INDEX fk_cand_opi_id_cand (id_cand), ADD CONSTRAINT fk_cand_opi_id_cand FOREIGN KEY (id_cand) REFERENCES candidature (id_cand);
ALTER TABLE i18n ADD INDEX fk_type_traduction_cod_typ_trad (cod_typ_trad), ADD CONSTRAINT fk_type_traduction_cod_typ_trad FOREIGN KEY (cod_typ_trad) REFERENCES type_traduction (cod_typ_trad);
ALTER TABLE candidat ADD INDEX fk_siscol_departement_cod_dep_cod_dep_naiss (cod_dep_naiss_candidat), ADD CONSTRAINT fk_siscol_departement_cod_dep_cod_dep_naiss FOREIGN KEY (cod_dep_naiss_candidat) REFERENCES siscol_departement (cod_dep);
ALTER TABLE gestionnaire ADD INDEX fk_centre_candidature_gestionnaire_id_ctr_cand (id_ctr_cand), ADD CONSTRAINT fk_centre_candidature_gestionnaire_id_ctr_cand FOREIGN KEY (id_ctr_cand) REFERENCES centre_candidature (id_ctr_cand);
ALTER TABLE droit_profil_ind ADD INDEX fk_droit_profil_ind_individu_login_ind (login_ind), ADD CONSTRAINT fk_droit_profil_ind_individu_login_ind FOREIGN KEY (login_ind) REFERENCES individu (login_ind);
ALTER TABLE gestionnaire ADD INDEX fk_gestionnaire_droit_profil_ind_id_droit_profil_ind (id_droit_profil_ind), ADD CONSTRAINT fk_gestionnaire_droit_profil_ind_id_droit_profil_ind FOREIGN KEY (id_droit_profil_ind) REFERENCES droit_profil_ind (id_droit_profil_ind);
ALTER TABLE commission_membre ADD INDEX fk_droit_profil_ind_commission_membre_id_droit_profil_ind (id_droit_profil_ind), ADD CONSTRAINT fk_droit_profil_ind_commission_membre_id_droit_profil_ind FOREIGN KEY (id_droit_profil_ind) REFERENCES droit_profil_ind (id_droit_profil_ind);
ALTER TABLE piece_justif ADD INDEX fk_fichier_piece_justif_id_fichier (id_fichier), ADD CONSTRAINT fk_fichier_piece_justif_id_fichier FOREIGN KEY (id_fichier) REFERENCES fichier (id_fichier);
ALTER TABLE formulaire ADD INDEX fk_i18n_formulaire_id18n_lib (id_i18n_lib_formulaire), ADD CONSTRAINT fk_i18n_formulaire_id18n_lib FOREIGN KEY (id_i18n_lib_formulaire) REFERENCES i18n (id_i18n);
ALTER TABLE formulaire ADD INDEX fk_i18n_formulaire_id18n_url (id_i18n_url_formulaire), ADD CONSTRAINT fk_i18n_formulaire_id18n_url FOREIGN KEY (id_i18n_url_formulaire) REFERENCES i18n (id_i18n);
ALTER TABLE formulaire ADD INDEX fk_centre_candidature_formulaire_id_ctr_cand (id_ctr_cand), ADD CONSTRAINT fk_centre_candidature_formulaire_id_ctr_cand FOREIGN KEY (id_ctr_cand) REFERENCES centre_candidature (id_ctr_cand);
ALTER TABLE candidat ADD INDEX fk_compte_minima_candidat_id_cpt_min (id_cpt_min), ADD CONSTRAINT fk_compte_minima_candidat_id_cpt_min FOREIGN KEY (id_cpt_min) REFERENCES compte_minima (id_cpt_min);
ALTER TABLE gestionnaire ADD INDEX fk_gestionnaire_cge_cod_cge (cod_cge), ADD CONSTRAINT fk_gestionnaire_cge_cod_cge FOREIGN KEY (cod_cge) REFERENCES siscol_centre_gestion (cod_cge);
ALTER TABLE candidat ADD INDEX fk_civilite_candidat_cod_civ (cod_civ), ADD CONSTRAINT fk_civilite_candidat_cod_civ FOREIGN KEY (cod_civ) REFERENCES civilite (cod_civ);
ALTER TABLE siscol_etablissement ADD INDEX fk_siscol_commune_siscol_etab_cod_com (cod_com), ADD CONSTRAINT fk_siscol_commune_siscol_etab_cod_com FOREIGN KEY (cod_com) REFERENCES siscol_commune (cod_com);
ALTER TABLE candidat_cursus_interne ADD INDEX fk_candidat_cursus_interne_candidat_id_candidat (id_candidat), ADD CONSTRAINT fk_candidat_cursus_interne_candidat_id_candidat FOREIGN KEY (id_candidat) REFERENCES candidat (id_candidat);
ALTER TABLE candidat_cursus_interne ADD INDEX fk_siscol_mention_cursus_interne_cod_men (cod_men_cursus_interne), ADD CONSTRAINT fk_siscol_mention_cursus_interne_cod_men FOREIGN KEY (cod_men_cursus_interne) REFERENCES siscol_mention (cod_men);
ALTER TABLE candidat_stage ADD INDEX fk_candidat_stage_candidat_id_candidat (id_candidat), ADD CONSTRAINT fk_candidat_stage_candidat_id_candidat FOREIGN KEY (id_candidat) REFERENCES candidat (id_candidat);
ALTER TABLE type_statut ADD INDEX fk_type_statut_i18n_id_i18n_lib_typ_statut (id_i18n_lib_typ_statut), ADD CONSTRAINT fk_type_statut_i18n_id_i18n_lib_typ_statut FOREIGN KEY (id_i18n_lib_typ_statut) REFERENCES i18n (id_i18n);
ALTER TABLE type_statut_piece ADD INDEX fk_type_statut_piece_i18n_id_i18n_lib_typ_statut_piece (id_i18n_lib_typ_statut_piece), ADD CONSTRAINT fk_type_statut_piece_i18n_id_i18n_lib_typ_statut_piece FOREIGN KEY (id_i18n_lib_typ_statut_piece) REFERENCES i18n (id_i18n);
ALTER TABLE pj_cand ADD INDEX fk_fichier_pj_cand_id_fichier (id_fichier), ADD CONSTRAINT fk_fichier_pj_cand_id_fichier FOREIGN KEY (id_fichier) REFERENCES fichier (id_fichier);
ALTER TABLE candidat_cursus_interne ADD INDEX fk_siscol_typ_resultat_candidat_cursus_interne_cod_tre (cod_tre_cursus_interne), ADD CONSTRAINT fk_siscol_typ_resultat_candidat_cursus_interne_cod_tre FOREIGN KEY (cod_tre_cursus_interne) REFERENCES siscol_typ_resultat (cod_tre);
ALTER TABLE type_traitement ADD INDEX fk_type_trait_i18n_id_i18n_lib_typ_trait (id_i18n_lib_typ_trait), ADD CONSTRAINT fk_type_trait_i18n_id_i18n_lib_typ_trait FOREIGN KEY (id_i18n_lib_typ_trait) REFERENCES i18n (id_i18n);
ALTER TABLE campagne ADD INDEX campagne_id_camp_id_camp (archiv_id_camp), ADD CONSTRAINT campagne_id_camp_id_camp FOREIGN KEY (archiv_id_camp) REFERENCES campagne (id_camp);
ALTER TABLE faq ADD INDEX fk_faq_i18n_id_i18n_question_faq (id_i18n_question_faq), ADD CONSTRAINT fk_faq_i18n_id_i18n_question_faq FOREIGN KEY (id_i18n_question_faq) REFERENCES i18n (id_i18n);
ALTER TABLE faq ADD INDEX fk_faq_i18n_id_i18n_reponse_faq (id_i18n_reponse_faq), ADD CONSTRAINT fk_faq_i18n_id_i18n_reponse_faq FOREIGN KEY (id_i18n_reponse_faq) REFERENCES i18n (id_i18n);